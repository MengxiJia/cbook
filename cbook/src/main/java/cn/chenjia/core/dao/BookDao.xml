<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.chenjia.core.dao.BookDao" >
  <resultMap id="BaseResultMap" type="cn.chenjia.core.bean.Book" >
    <id column="bid" property="bid" jdbcType="INTEGER" />
    <result column="bname" property="bname" jdbcType="VARCHAR" />
    <result column="bauthor" property="bauthor" jdbcType="VARCHAR" />
    <result column="bnation" property="bnation" jdbcType="VARCHAR" />
    <result column="bprice" property="bprice" jdbcType="DOUBLE" />
    <result column="bstock" property="bstock" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <if test="fields == null" >
      bid, bname, bauthor, bnation, bprice, bstock
    </if>
    <if test="fields != null" >
      ${fields}
    </if>
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.chenjia.core.bean.BookQuery" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from book
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="startRow != null" >
      limit #{startRow} , #{pageSize}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    bid,bname,bauthor,bnation,bprice,bstock
    from book
    where bid = #{bid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from book
    where bid = #{bid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.chenjia.core.bean.BookQuery" >
    delete from book
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.chenjia.core.bean.Book" >
    insert into book (bid, bname, bauthor, 
      bnation, bprice, bstock
      )
    values (#{bid,jdbcType=INTEGER}, #{bname,jdbcType=VARCHAR}, #{bauthor,jdbcType=VARCHAR}, 
      #{bnation,jdbcType=VARCHAR}, #{bprice,jdbcType=DOUBLE}, #{bstock,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.chenjia.core.bean.Book" >
    insert into book
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="bid != null" >
        bid,
      </if>
      <if test="bname != null" >
        bname,
      </if>
      <if test="bauthor != null" >
        bauthor,
      </if>
      <if test="bnation != null" >
        bnation,
      </if>
      <if test="bprice != null" >
        bprice,
      </if>
      <if test="bstock != null" >
        bstock,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="bid != null" >
        #{bid,jdbcType=INTEGER},
      </if>
      <if test="bname != null" >
        #{bname,jdbcType=VARCHAR},
      </if>
      <if test="bauthor != null" >
        #{bauthor,jdbcType=VARCHAR},
      </if>
      <if test="bnation != null" >
        #{bnation,jdbcType=VARCHAR},
      </if>
      <if test="bprice != null" >
        #{bprice,jdbcType=DOUBLE},
      </if>
      <if test="bstock != null" >
        #{bstock,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.chenjia.core.bean.BookQuery" resultType="java.lang.Integer" >
    select count(*) from book
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update book
    <set >
      <if test="record.bid != null" >
        bid = #{record.bid,jdbcType=INTEGER},
      </if>
      <if test="record.bname != null" >
        bname = #{record.bname,jdbcType=VARCHAR},
      </if>
      <if test="record.bauthor != null" >
        bauthor = #{record.bauthor,jdbcType=VARCHAR},
      </if>
      <if test="record.bnation != null" >
        bnation = #{record.bnation,jdbcType=VARCHAR},
      </if>
      <if test="record.bprice != null" >
        bprice = #{record.bprice,jdbcType=DOUBLE},
      </if>
      <if test="record.bstock != null" >
        bstock = #{record.bstock,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update book
    set bid = #{record.bid,jdbcType=INTEGER},
      bname = #{record.bname,jdbcType=VARCHAR},
      bauthor = #{record.bauthor,jdbcType=VARCHAR},
      bnation = #{record.bnation,jdbcType=VARCHAR},
      bprice = #{record.bprice,jdbcType=DOUBLE},
      bstock = #{record.bstock,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.chenjia.core.bean.Book" >
    update book
    <set >
      <if test="bname != null" >
        bname = #{bname,jdbcType=VARCHAR},
      </if>
      <if test="bauthor != null" >
        bauthor = #{bauthor,jdbcType=VARCHAR},
      </if>
      <if test="bnation != null" >
        bnation = #{bnation,jdbcType=VARCHAR},
      </if>
      <if test="bprice != null" >
        bprice = #{bprice,jdbcType=DOUBLE},
      </if>
      <if test="bstock != null" >
        bstock = #{bstock,jdbcType=VARCHAR},
      </if>
    </set>
    where bid = #{bid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.chenjia.core.bean.Book" >
    update book
    set bname = #{bname,jdbcType=VARCHAR},
      bauthor = #{bauthor,jdbcType=VARCHAR},
      bnation = #{bnation,jdbcType=VARCHAR},
      bprice = #{bprice,jdbcType=DOUBLE},
      bstock = #{bstock,jdbcType=VARCHAR}
    where bid = #{bid,jdbcType=INTEGER}
  </update>
</mapper>